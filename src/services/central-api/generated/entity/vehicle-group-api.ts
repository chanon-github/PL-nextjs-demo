/* tslint:disable */
/* eslint-disable */
/**
 * PL Cental API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { BooleanDataResponse } from '../model';
// @ts-ignore
import { CarrentalDeleteInput } from '../model';
// @ts-ignore
import { CrtVehicleGroupCrtVehicleGroupPagination } from '../model';
// @ts-ignore
import { CrtVehicleGroupDetailVehicleGroupDetailOutputPagination } from '../model';
// @ts-ignore
import { MasterVehicleGroupInput } from '../model';
// @ts-ignore
import { VehicleGroupDetailInput } from '../model';
/**
 * VehicleGroupApi - axios parameter creator
 * @export
 */
export const VehicleGroupApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @param {CarrentalDeleteInput} [carrentalDeleteInput] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupDeleteDelete: async (carrentalDeleteInput?: CarrentalDeleteInput, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/api/Master/VehicleGroup/Delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Bearer required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(carrentalDeleteInput, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {number} [groupId] 
         * @param {number} [id] 
         * @param {string} [tenantCode] 
         * @param {string} [branchCode] 
         * @param {string} [keyword] 
         * @param {number} [pageIndex] 
         * @param {number} [pageSize] 
         * @param {string} [sortField] 
         * @param {string} [sortDirection] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupGetDetailGet: async (groupId?: number, id?: number, tenantCode?: string, branchCode?: string, keyword?: string, pageIndex?: number, pageSize?: number, sortField?: string, sortDirection?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/api/Master/VehicleGroup/GetDetail`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Bearer required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)

            if (groupId !== undefined) {
                localVarQueryParameter['GroupId'] = groupId;
            }

            if (id !== undefined) {
                localVarQueryParameter['Id'] = id;
            }

            if (tenantCode !== undefined) {
                localVarQueryParameter['TenantCode'] = tenantCode;
            }

            if (branchCode !== undefined) {
                localVarQueryParameter['BranchCode'] = branchCode;
            }

            if (keyword !== undefined) {
                localVarQueryParameter['Keyword'] = keyword;
            }

            if (pageIndex !== undefined) {
                localVarQueryParameter['PageIndex'] = pageIndex;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['PageSize'] = pageSize;
            }

            if (sortField !== undefined) {
                localVarQueryParameter['SortField'] = sortField;
            }

            if (sortDirection !== undefined) {
                localVarQueryParameter['SortDirection'] = sortDirection;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {string} [groupName] 
         * @param {string} [status] 
         * @param {number} [id] 
         * @param {string} [tenantCode] 
         * @param {string} [branchCode] 
         * @param {string} [keyword] 
         * @param {number} [pageIndex] 
         * @param {number} [pageSize] 
         * @param {string} [sortField] 
         * @param {string} [sortDirection] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupGetGet: async (groupName?: string, status?: string, id?: number, tenantCode?: string, branchCode?: string, keyword?: string, pageIndex?: number, pageSize?: number, sortField?: string, sortDirection?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/api/Master/VehicleGroup/Get`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Bearer required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)

            if (groupName !== undefined) {
                localVarQueryParameter['GroupName'] = groupName;
            }

            if (status !== undefined) {
                localVarQueryParameter['Status'] = status;
            }

            if (id !== undefined) {
                localVarQueryParameter['Id'] = id;
            }

            if (tenantCode !== undefined) {
                localVarQueryParameter['TenantCode'] = tenantCode;
            }

            if (branchCode !== undefined) {
                localVarQueryParameter['BranchCode'] = branchCode;
            }

            if (keyword !== undefined) {
                localVarQueryParameter['Keyword'] = keyword;
            }

            if (pageIndex !== undefined) {
                localVarQueryParameter['PageIndex'] = pageIndex;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['PageSize'] = pageSize;
            }

            if (sortField !== undefined) {
                localVarQueryParameter['SortField'] = sortField;
            }

            if (sortDirection !== undefined) {
                localVarQueryParameter['SortDirection'] = sortDirection;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {VehicleGroupDetailInput} [vehicleGroupDetailInput] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupSaveDetailPost: async (vehicleGroupDetailInput?: VehicleGroupDetailInput, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/api/Master/VehicleGroup/SaveDetail`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Bearer required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(vehicleGroupDetailInput, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {MasterVehicleGroupInput} [masterVehicleGroupInput] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupSavePost: async (masterVehicleGroupInput?: MasterVehicleGroupInput, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/api/Master/VehicleGroup/Save`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Bearer required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(masterVehicleGroupInput, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * VehicleGroupApi - functional programming interface
 * @export
 */
export const VehicleGroupApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = VehicleGroupApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @param {CarrentalDeleteInput} [carrentalDeleteInput] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiMasterVehicleGroupDeleteDelete(carrentalDeleteInput?: CarrentalDeleteInput, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BooleanDataResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiMasterVehicleGroupDeleteDelete(carrentalDeleteInput, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {number} [groupId] 
         * @param {number} [id] 
         * @param {string} [tenantCode] 
         * @param {string} [branchCode] 
         * @param {string} [keyword] 
         * @param {number} [pageIndex] 
         * @param {number} [pageSize] 
         * @param {string} [sortField] 
         * @param {string} [sortDirection] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiMasterVehicleGroupGetDetailGet(groupId?: number, id?: number, tenantCode?: string, branchCode?: string, keyword?: string, pageIndex?: number, pageSize?: number, sortField?: string, sortDirection?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CrtVehicleGroupDetailVehicleGroupDetailOutputPagination>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiMasterVehicleGroupGetDetailGet(groupId, id, tenantCode, branchCode, keyword, pageIndex, pageSize, sortField, sortDirection, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {string} [groupName] 
         * @param {string} [status] 
         * @param {number} [id] 
         * @param {string} [tenantCode] 
         * @param {string} [branchCode] 
         * @param {string} [keyword] 
         * @param {number} [pageIndex] 
         * @param {number} [pageSize] 
         * @param {string} [sortField] 
         * @param {string} [sortDirection] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiMasterVehicleGroupGetGet(groupName?: string, status?: string, id?: number, tenantCode?: string, branchCode?: string, keyword?: string, pageIndex?: number, pageSize?: number, sortField?: string, sortDirection?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CrtVehicleGroupCrtVehicleGroupPagination>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiMasterVehicleGroupGetGet(groupName, status, id, tenantCode, branchCode, keyword, pageIndex, pageSize, sortField, sortDirection, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {VehicleGroupDetailInput} [vehicleGroupDetailInput] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiMasterVehicleGroupSaveDetailPost(vehicleGroupDetailInput?: VehicleGroupDetailInput, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BooleanDataResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiMasterVehicleGroupSaveDetailPost(vehicleGroupDetailInput, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {MasterVehicleGroupInput} [masterVehicleGroupInput] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiMasterVehicleGroupSavePost(masterVehicleGroupInput?: MasterVehicleGroupInput, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BooleanDataResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiMasterVehicleGroupSavePost(masterVehicleGroupInput, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * VehicleGroupApi - factory interface
 * @export
 */
export const VehicleGroupApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = VehicleGroupApiFp(configuration)
    return {
        /**
         * 
         * @param {VehicleGroupApiApiMasterVehicleGroupDeleteDeleteRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupDeleteDelete(requestParameters: VehicleGroupApiApiMasterVehicleGroupDeleteDeleteRequest = {}, options?: AxiosRequestConfig): AxiosPromise<BooleanDataResponse> {
            return localVarFp.apiMasterVehicleGroupDeleteDelete(requestParameters.carrentalDeleteInput, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {VehicleGroupApiApiMasterVehicleGroupGetDetailGetRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupGetDetailGet(requestParameters: VehicleGroupApiApiMasterVehicleGroupGetDetailGetRequest = {}, options?: AxiosRequestConfig): AxiosPromise<CrtVehicleGroupDetailVehicleGroupDetailOutputPagination> {
            return localVarFp.apiMasterVehicleGroupGetDetailGet(requestParameters.groupId, requestParameters.id, requestParameters.tenantCode, requestParameters.branchCode, requestParameters.keyword, requestParameters.pageIndex, requestParameters.pageSize, requestParameters.sortField, requestParameters.sortDirection, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {VehicleGroupApiApiMasterVehicleGroupGetGetRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupGetGet(requestParameters: VehicleGroupApiApiMasterVehicleGroupGetGetRequest = {}, options?: AxiosRequestConfig): AxiosPromise<CrtVehicleGroupCrtVehicleGroupPagination> {
            return localVarFp.apiMasterVehicleGroupGetGet(requestParameters.groupName, requestParameters.status, requestParameters.id, requestParameters.tenantCode, requestParameters.branchCode, requestParameters.keyword, requestParameters.pageIndex, requestParameters.pageSize, requestParameters.sortField, requestParameters.sortDirection, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {VehicleGroupApiApiMasterVehicleGroupSaveDetailPostRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupSaveDetailPost(requestParameters: VehicleGroupApiApiMasterVehicleGroupSaveDetailPostRequest = {}, options?: AxiosRequestConfig): AxiosPromise<BooleanDataResponse> {
            return localVarFp.apiMasterVehicleGroupSaveDetailPost(requestParameters.vehicleGroupDetailInput, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {VehicleGroupApiApiMasterVehicleGroupSavePostRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterVehicleGroupSavePost(requestParameters: VehicleGroupApiApiMasterVehicleGroupSavePostRequest = {}, options?: AxiosRequestConfig): AxiosPromise<BooleanDataResponse> {
            return localVarFp.apiMasterVehicleGroupSavePost(requestParameters.masterVehicleGroupInput, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for apiMasterVehicleGroupDeleteDelete operation in VehicleGroupApi.
 * @export
 * @interface VehicleGroupApiApiMasterVehicleGroupDeleteDeleteRequest
 */
export interface VehicleGroupApiApiMasterVehicleGroupDeleteDeleteRequest {
    /**
     * 
     * @type {CarrentalDeleteInput}
     * @memberof VehicleGroupApiApiMasterVehicleGroupDeleteDelete
     */
    readonly carrentalDeleteInput?: CarrentalDeleteInput
}

/**
 * Request parameters for apiMasterVehicleGroupGetDetailGet operation in VehicleGroupApi.
 * @export
 * @interface VehicleGroupApiApiMasterVehicleGroupGetDetailGetRequest
 */
export interface VehicleGroupApiApiMasterVehicleGroupGetDetailGetRequest {
    /**
     * 
     * @type {number}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetDetailGet
     */
    readonly groupId?: number

    /**
     * 
     * @type {number}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetDetailGet
     */
    readonly id?: number

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetDetailGet
     */
    readonly tenantCode?: string

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetDetailGet
     */
    readonly branchCode?: string

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetDetailGet
     */
    readonly keyword?: string

    /**
     * 
     * @type {number}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetDetailGet
     */
    readonly pageIndex?: number

    /**
     * 
     * @type {number}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetDetailGet
     */
    readonly pageSize?: number

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetDetailGet
     */
    readonly sortField?: string

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetDetailGet
     */
    readonly sortDirection?: string
}

/**
 * Request parameters for apiMasterVehicleGroupGetGet operation in VehicleGroupApi.
 * @export
 * @interface VehicleGroupApiApiMasterVehicleGroupGetGetRequest
 */
export interface VehicleGroupApiApiMasterVehicleGroupGetGetRequest {
    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly groupName?: string

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly status?: string

    /**
     * 
     * @type {number}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly id?: number

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly tenantCode?: string

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly branchCode?: string

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly keyword?: string

    /**
     * 
     * @type {number}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly pageIndex?: number

    /**
     * 
     * @type {number}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly pageSize?: number

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly sortField?: string

    /**
     * 
     * @type {string}
     * @memberof VehicleGroupApiApiMasterVehicleGroupGetGet
     */
    readonly sortDirection?: string
}

/**
 * Request parameters for apiMasterVehicleGroupSaveDetailPost operation in VehicleGroupApi.
 * @export
 * @interface VehicleGroupApiApiMasterVehicleGroupSaveDetailPostRequest
 */
export interface VehicleGroupApiApiMasterVehicleGroupSaveDetailPostRequest {
    /**
     * 
     * @type {VehicleGroupDetailInput}
     * @memberof VehicleGroupApiApiMasterVehicleGroupSaveDetailPost
     */
    readonly vehicleGroupDetailInput?: VehicleGroupDetailInput
}

/**
 * Request parameters for apiMasterVehicleGroupSavePost operation in VehicleGroupApi.
 * @export
 * @interface VehicleGroupApiApiMasterVehicleGroupSavePostRequest
 */
export interface VehicleGroupApiApiMasterVehicleGroupSavePostRequest {
    /**
     * 
     * @type {MasterVehicleGroupInput}
     * @memberof VehicleGroupApiApiMasterVehicleGroupSavePost
     */
    readonly masterVehicleGroupInput?: MasterVehicleGroupInput
}

/**
 * VehicleGroupApi - object-oriented interface
 * @export
 * @class VehicleGroupApi
 * @extends {BaseAPI}
 */
export class VehicleGroupApi extends BaseAPI {
    /**
     * 
     * @param {VehicleGroupApiApiMasterVehicleGroupDeleteDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VehicleGroupApi
     */
    public apiMasterVehicleGroupDeleteDelete(requestParameters: VehicleGroupApiApiMasterVehicleGroupDeleteDeleteRequest = {}, options?: AxiosRequestConfig) {
        return VehicleGroupApiFp(this.configuration).apiMasterVehicleGroupDeleteDelete(requestParameters.carrentalDeleteInput, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {VehicleGroupApiApiMasterVehicleGroupGetDetailGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VehicleGroupApi
     */
    public apiMasterVehicleGroupGetDetailGet(requestParameters: VehicleGroupApiApiMasterVehicleGroupGetDetailGetRequest = {}, options?: AxiosRequestConfig) {
        return VehicleGroupApiFp(this.configuration).apiMasterVehicleGroupGetDetailGet(requestParameters.groupId, requestParameters.id, requestParameters.tenantCode, requestParameters.branchCode, requestParameters.keyword, requestParameters.pageIndex, requestParameters.pageSize, requestParameters.sortField, requestParameters.sortDirection, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {VehicleGroupApiApiMasterVehicleGroupGetGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VehicleGroupApi
     */
    public apiMasterVehicleGroupGetGet(requestParameters: VehicleGroupApiApiMasterVehicleGroupGetGetRequest = {}, options?: AxiosRequestConfig) {
        return VehicleGroupApiFp(this.configuration).apiMasterVehicleGroupGetGet(requestParameters.groupName, requestParameters.status, requestParameters.id, requestParameters.tenantCode, requestParameters.branchCode, requestParameters.keyword, requestParameters.pageIndex, requestParameters.pageSize, requestParameters.sortField, requestParameters.sortDirection, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {VehicleGroupApiApiMasterVehicleGroupSaveDetailPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VehicleGroupApi
     */
    public apiMasterVehicleGroupSaveDetailPost(requestParameters: VehicleGroupApiApiMasterVehicleGroupSaveDetailPostRequest = {}, options?: AxiosRequestConfig) {
        return VehicleGroupApiFp(this.configuration).apiMasterVehicleGroupSaveDetailPost(requestParameters.vehicleGroupDetailInput, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {VehicleGroupApiApiMasterVehicleGroupSavePostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VehicleGroupApi
     */
    public apiMasterVehicleGroupSavePost(requestParameters: VehicleGroupApiApiMasterVehicleGroupSavePostRequest = {}, options?: AxiosRequestConfig) {
        return VehicleGroupApiFp(this.configuration).apiMasterVehicleGroupSavePost(requestParameters.masterVehicleGroupInput, options).then((request) => request(this.axios, this.basePath));
    }
}

